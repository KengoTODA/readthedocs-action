const { readFileSync, writeFileSync } = require('fs')

const Table = require('table-builder')

const WEBOOOKS = require('@octokit/webhooks-definitions')

// update lib/webhook-names.json
const newWebhookNames = WEBOOOKS.reduce((list, event) => {
  list.push(event.name, ...event.actions.map(action => `${event.name}.${action}`))
  return list
}, ['*', 'error']).sort()
writeFileSync('lib/webhook-names.json', JSON.stringify([...newWebhookNames], null, 2) + '\n')

// update README.md
const data = WEBOOOKS.map(w => {
  const link = `https://developer.github.com/v3/activity/events/types/#${w.name.replace(/[^a-z]/g, '')}event`
  return {
    name: `<a href="${link}"><code>${w.name}</code></a>`,
    actions: w.actions.map(action => `<code>${action}</code>`).join('<br>')
  }
})
const headers = { name: 'Event', actions: 'Actions' }
const tableHtml = new Table()
  .setHeaders(headers)
  .setData(data)
  .render()

const readme = readFileSync('README.md').toString()
const parts = readme.split(/<!-- \/?autogenerated via scripts\/update-known-events.js -->/)

const newReadme = parts[0] +
  '<!-- autogenerated via scripts/update-known-events.js -->' +
  tableHtml +
  '<!-- /autogenerated via scripts/update-known-events.js -->' +
  parts[2]
writeFileSync('README.md', newReadme)
