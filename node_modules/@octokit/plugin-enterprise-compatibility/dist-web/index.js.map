{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/is-issue-labels-update-or-replace.js","../dist-src/is-get-reference-or-list-references.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"1.2.1\";\n","export function isIssueLabelsUpdateOrReplace({ method, url }) {\n    if (![\"POST\", \"PUT\"].includes(method)) {\n        return false;\n    }\n    if (!/\\/repos\\/[^/]+\\/[^/]+\\/issues\\/[^/]+\\/labels/.test(url)) {\n        return false;\n    }\n    return true;\n}\n","const REGEX_IS_GET_REFERENCE_PATH = /\\/repos\\/[^/]+\\/[^/]+\\/git\\/ref\\//;\nconst REGEX_IS_LIST_REFERENCES_PATH = /\\/repos\\/[^/]+\\/[^/]+\\/git\\/matching-refs\\//;\nexport function isGetReference({ method, url }) {\n    if (![\"GET\", \"HEAD\"].includes(method)) {\n        return false;\n    }\n    return REGEX_IS_GET_REFERENCE_PATH.test(url);\n}\nexport function isListReferences({ method, url }) {\n    if (![\"GET\", \"HEAD\"].includes(method)) {\n        return false;\n    }\n    return REGEX_IS_LIST_REFERENCES_PATH.test(url);\n}\n","import { RequestError } from \"@octokit/request-error\";\nimport { VERSION } from \"./version\";\nimport { isIssueLabelsUpdateOrReplace } from \"./is-issue-labels-update-or-replace\";\nimport { isGetReference, isListReferences } from \"./is-get-reference-or-list-references\";\nexport function enterpriseCompatibility(octokit) {\n    octokit.hook.wrap(\"request\", async (request, options) => {\n        // see https://github.com/octokit/rest.js/blob/15.x/lib/routes.json#L3046-L3068\n        if (isIssueLabelsUpdateOrReplace(options)) {\n            options.data = options.labels;\n            delete options.labels;\n            // for @octokit/rest v16.x, remove validation of labels option\n            if (options.request.validate) {\n                delete options.request.validate.labels;\n            }\n            return request(options);\n        }\n        const isGetReferenceRequest = isGetReference(options);\n        const isListReferencesRequest = isListReferences(options);\n        if (isGetReferenceRequest || isListReferencesRequest) {\n            options.url = options.url.replace(/\\/repos\\/([^/]+)\\/([^/]+)\\/git\\/(ref|matching-refs)\\/(.*)$/, \"/repos/$1/$2/git/refs/$4\");\n            return request(options)\n                .then((response) => {\n                if (isGetReferenceRequest) {\n                    if (Array.isArray(response.data)) {\n                        throw new RequestError(`More than one reference found at \"${options.url}\"`, 404, {\n                            request: options\n                        });\n                    }\n                    // âœ… received single reference\n                    return response;\n                }\n                // make sure that\n                if (!Array.isArray(response.data)) {\n                    response.data = [response.data];\n                }\n                return response;\n            })\n                .catch((error) => {\n                if (isListReferencesRequest && error.status === 404) {\n                    return {\n                        status: 200,\n                        headers: error.headers,\n                        data: []\n                    };\n                }\n                throw error;\n            });\n        }\n        return request(options);\n    });\n}\nenterpriseCompatibility.VERSION = VERSION;\n"],"names":[],"mappings":";;AAAO,MAAM,OAAO,GAAG,mBAAmB,CAAC;;ACApC,SAAS,4BAA4B,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE;IAC1D,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QACnC,OAAO,KAAK,CAAC;KAChB;IACD,IAAI,CAAC,8CAA8C,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC3D,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,IAAI,CAAC;CACf;;ACRD,MAAM,2BAA2B,GAAG,mCAAmC,CAAC;AACxE,MAAM,6BAA6B,GAAG,6CAA6C,CAAC;AACpF,AAAO,SAAS,cAAc,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE;IAC5C,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QACnC,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,2BAA2B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAChD;AACD,AAAO,SAAS,gBAAgB,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE;IAC9C,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QACnC,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,6BAA6B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAClD;;ACTM,SAAS,uBAAuB,CAAC,OAAO,EAAE;IAC7C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,OAAO,EAAE,OAAO,KAAK;;QAErD,IAAI,4BAA4B,CAAC,OAAO,CAAC,EAAE;YACvC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;YAC9B,OAAO,OAAO,CAAC,MAAM,CAAC;;YAEtB,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE;gBAC1B,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC1C;YACD,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3B;QACD,MAAM,qBAAqB,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;QACtD,MAAM,uBAAuB,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC1D,IAAI,qBAAqB,IAAI,uBAAuB,EAAE;YAClD,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,4DAA4D,EAAE,0BAA0B,CAAC,CAAC;YAC5H,OAAO,OAAO,CAAC,OAAO,CAAC;iBAClB,IAAI,CAAC,CAAC,QAAQ,KAAK;gBACpB,IAAI,qBAAqB,EAAE;oBACvB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBAC9B,MAAM,IAAI,YAAY,CAAC,CAAC,kCAAkC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE;4BAC7E,OAAO,EAAE,OAAO;yBACnB,CAAC,CAAC;qBACN;;oBAED,OAAO,QAAQ,CAAC;iBACnB;;gBAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBAC/B,QAAQ,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACnC;gBACD,OAAO,QAAQ,CAAC;aACnB,CAAC;iBACG,KAAK,CAAC,CAAC,KAAK,KAAK;gBAClB,IAAI,uBAAuB,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBACjD,OAAO;wBACH,MAAM,EAAE,GAAG;wBACX,OAAO,EAAE,KAAK,CAAC,OAAO;wBACtB,IAAI,EAAE,EAAE;qBACX,CAAC;iBACL;gBACD,MAAM,KAAK,CAAC;aACf,CAAC,CAAC;SACN;QACD,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC;KAC3B,CAAC,CAAC;CACN;AACD,uBAAuB,CAAC,OAAO,GAAG,OAAO,CAAC;;;;"}