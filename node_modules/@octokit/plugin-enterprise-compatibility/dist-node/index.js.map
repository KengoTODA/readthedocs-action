{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/is-issue-labels-update-or-replace.js","../dist-src/is-get-reference-or-list-references.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"1.2.1\";\n","export function isIssueLabelsUpdateOrReplace({ method, url }) {\n    if (![\"POST\", \"PUT\"].includes(method)) {\n        return false;\n    }\n    if (!/\\/repos\\/[^/]+\\/[^/]+\\/issues\\/[^/]+\\/labels/.test(url)) {\n        return false;\n    }\n    return true;\n}\n","const REGEX_IS_GET_REFERENCE_PATH = /\\/repos\\/[^/]+\\/[^/]+\\/git\\/ref\\//;\nconst REGEX_IS_LIST_REFERENCES_PATH = /\\/repos\\/[^/]+\\/[^/]+\\/git\\/matching-refs\\//;\nexport function isGetReference({ method, url }) {\n    if (![\"GET\", \"HEAD\"].includes(method)) {\n        return false;\n    }\n    return REGEX_IS_GET_REFERENCE_PATH.test(url);\n}\nexport function isListReferences({ method, url }) {\n    if (![\"GET\", \"HEAD\"].includes(method)) {\n        return false;\n    }\n    return REGEX_IS_LIST_REFERENCES_PATH.test(url);\n}\n","import { RequestError } from \"@octokit/request-error\";\nimport { VERSION } from \"./version\";\nimport { isIssueLabelsUpdateOrReplace } from \"./is-issue-labels-update-or-replace\";\nimport { isGetReference, isListReferences } from \"./is-get-reference-or-list-references\";\nexport function enterpriseCompatibility(octokit) {\n    octokit.hook.wrap(\"request\", async (request, options) => {\n        // see https://github.com/octokit/rest.js/blob/15.x/lib/routes.json#L3046-L3068\n        if (isIssueLabelsUpdateOrReplace(options)) {\n            options.data = options.labels;\n            delete options.labels;\n            // for @octokit/rest v16.x, remove validation of labels option\n            if (options.request.validate) {\n                delete options.request.validate.labels;\n            }\n            return request(options);\n        }\n        const isGetReferenceRequest = isGetReference(options);\n        const isListReferencesRequest = isListReferences(options);\n        if (isGetReferenceRequest || isListReferencesRequest) {\n            options.url = options.url.replace(/\\/repos\\/([^/]+)\\/([^/]+)\\/git\\/(ref|matching-refs)\\/(.*)$/, \"/repos/$1/$2/git/refs/$4\");\n            return request(options)\n                .then((response) => {\n                if (isGetReferenceRequest) {\n                    if (Array.isArray(response.data)) {\n                        throw new RequestError(`More than one reference found at \"${options.url}\"`, 404, {\n                            request: options\n                        });\n                    }\n                    // âœ… received single reference\n                    return response;\n                }\n                // make sure that\n                if (!Array.isArray(response.data)) {\n                    response.data = [response.data];\n                }\n                return response;\n            })\n                .catch((error) => {\n                if (isListReferencesRequest && error.status === 404) {\n                    return {\n                        status: 200,\n                        headers: error.headers,\n                        data: []\n                    };\n                }\n                throw error;\n            });\n        }\n        return request(options);\n    });\n}\nenterpriseCompatibility.VERSION = VERSION;\n"],"names":["VERSION","isIssueLabelsUpdateOrReplace","method","url","includes","test","REGEX_IS_GET_REFERENCE_PATH","REGEX_IS_LIST_REFERENCES_PATH","isGetReference","isListReferences","enterpriseCompatibility","octokit","hook","wrap","request","options","data","labels","validate","isGetReferenceRequest","isListReferencesRequest","replace","then","response","Array","isArray","RequestError","catch","error","status","headers"],"mappings":";;;;;;AAAO,MAAMA,OAAO,GAAG,mBAAhB;;ACAA,SAASC,4BAAT,CAAsC;EAAEC,MAAF;EAAUC;CAAhD,EAAuD;MACtD,CAAC,CAAC,MAAD,EAAS,KAAT,EAAgBC,QAAhB,CAAyBF,MAAzB,CAAL,EAAuC;WAC5B,KAAP;;;MAEA,CAAC,+CAA+CG,IAA/C,CAAoDF,GAApD,CAAL,EAA+D;WACpD,KAAP;;;SAEG,IAAP;;;ACPJ,MAAMG,2BAA2B,GAAG,mCAApC;AACA,MAAMC,6BAA6B,GAAG,6CAAtC;AACA,AAAO,SAASC,cAAT,CAAwB;EAAEN,MAAF;EAAUC;CAAlC,EAAyC;MACxC,CAAC,CAAC,KAAD,EAAQ,MAAR,EAAgBC,QAAhB,CAAyBF,MAAzB,CAAL,EAAuC;WAC5B,KAAP;;;SAEGI,2BAA2B,CAACD,IAA5B,CAAiCF,GAAjC,CAAP;;AAEJ,AAAO,SAASM,gBAAT,CAA0B;EAAEP,MAAF;EAAUC;CAApC,EAA2C;MAC1C,CAAC,CAAC,KAAD,EAAQ,MAAR,EAAgBC,QAAhB,CAAyBF,MAAzB,CAAL,EAAuC;WAC5B,KAAP;;;SAEGK,6BAA6B,CAACF,IAA9B,CAAmCF,GAAnC,CAAP;;;ACRG,SAASO,uBAAT,CAAiCC,OAAjC,EAA0C;EAC7CA,OAAO,CAACC,IAAR,CAAaC,IAAb,CAAkB,SAAlB,EAA6B,OAAOC,OAAP,EAAgBC,OAAhB,KAA4B;;QAEjDd,4BAA4B,CAACc,OAAD,CAAhC,EAA2C;MACvCA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACE,MAAvB;aACOF,OAAO,CAACE,MAAf,CAFuC;;UAInCF,OAAO,CAACD,OAAR,CAAgBI,QAApB,EAA8B;eACnBH,OAAO,CAACD,OAAR,CAAgBI,QAAhB,CAAyBD,MAAhC;;;aAEGH,OAAO,CAACC,OAAD,CAAd;;;UAEEI,qBAAqB,GAAGX,cAAc,CAACO,OAAD,CAA5C;UACMK,uBAAuB,GAAGX,gBAAgB,CAACM,OAAD,CAAhD;;QACII,qBAAqB,IAAIC,uBAA7B,EAAsD;MAClDL,OAAO,CAACZ,GAAR,GAAcY,OAAO,CAACZ,GAAR,CAAYkB,OAAZ,CAAoB,4DAApB,EAAkF,0BAAlF,CAAd;aACOP,OAAO,CAACC,OAAD,CAAP,CACFO,IADE,CACIC,QAAD,IAAc;YAChBJ,qBAAJ,EAA2B;cACnBK,KAAK,CAACC,OAAN,CAAcF,QAAQ,CAACP,IAAvB,CAAJ,EAAkC;kBACxB,IAAIU,yBAAJ,CAAkB,qCAAoCX,OAAO,CAACZ,GAAI,GAAlE,EAAsE,GAAtE,EAA2E;cAC7EW,OAAO,EAAEC;aADP,CAAN;WAFmB;;;iBAOhBQ,QAAP;SARgB;;;YAWhB,CAACC,KAAK,CAACC,OAAN,CAAcF,QAAQ,CAACP,IAAvB,CAAL,EAAmC;UAC/BO,QAAQ,CAACP,IAAT,GAAgB,CAACO,QAAQ,CAACP,IAAV,CAAhB;;;eAEGO,QAAP;OAfG,EAiBFI,KAjBE,CAiBKC,KAAD,IAAW;YACdR,uBAAuB,IAAIQ,KAAK,CAACC,MAAN,KAAiB,GAAhD,EAAqD;iBAC1C;YACHA,MAAM,EAAE,GADL;YAEHC,OAAO,EAAEF,KAAK,CAACE,OAFZ;YAGHd,IAAI,EAAE;WAHV;;;cAMEY,KAAN;OAzBG,CAAP;;;WA4BGd,OAAO,CAACC,OAAD,CAAd;GA3CJ;;AA8CJL,uBAAuB,CAACV,OAAxB,GAAkCA,OAAlC;;;;"}